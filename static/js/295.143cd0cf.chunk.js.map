{"version":3,"file":"static/js/295.143cd0cf.chunk.js","mappings":"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","sources":["components/Login/LoginForm.jsx","components/Login/Login.jsx","components/common/FormsControls/FormsControls.jsx","webpack://react-kabzda-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import {Field, Form, Formik} from \"formik\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport s from \"../common/FormsControls/FormsControls.module.css\";\r\nimport React from \"react\";\r\nimport {SignupSchema} from \"./Login\";\r\n\r\nexport const LoginForm = (props) => {\r\n    return (\r\n        <>\r\n            <Formik\r\n                validationSchema={SignupSchema}\r\n                initialValues={{email: \"\", password: \"\", rememberMe: false}}\r\n                onSubmit={(formData, {setSubmitting}) => {\r\n                    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n                    setSubmitting(false); // Убираем статус загрузки\r\n                }}\r\n            >\r\n                {({handleSubmit}) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <Field name=\"email\" placeholder=\"Email\" component={FormControl}\r\n                                   componentProps={{type: \"text\"}}/>\r\n                        </div>\r\n                        <div>\r\n                            <Field name=\"password\" type=\"password\" placeholder=\"Password\" component={FormControl}\r\n                                   componentProps={{type: \"password\"}}/>\r\n                        </div>\r\n                        <div>\r\n                            <Field name=\"rememberMe\" type=\"checkbox\" component={FormControl}\r\n                                   componentProps={{type: \"checkbox\"}}/> Remember me\r\n                        </div>\r\n\r\n                        {props.captchaUrl && <img src={props.captchaUrl} alt=\"Remember me\" />}\r\n                        {props.captchaUrl && <Field name=\"captcha\" placeholder=\"Enter what you see\" component={FormControl}\r\n                                                      componentProps={{type: \"text\"}}/>}\r\n\r\n                        {props.errorAuth && <div className={s.formSummaryError}>{props.errorAuth}</div>}\r\n                        <div>\r\n                            <button type=\"submit\">Login</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport s from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport {LoginForm} from \"./LoginForm\";\r\n\r\nexport const SignupSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(10, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    password: Yup.string()\r\n        .min(4, 'Too Short!')\r\n        .max(20, 'Too Long!')\r\n        .required('Required'),\r\n    rememberMe: Yup.boolean(),\r\n});\r\n\r\nfunction Login(props) {\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate replace to=\"/profile\"/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm {...props} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    errorAuth: state.auth.errorAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({ field, form: { touched, errors }, component: Component = \"input\", ...props }) => {\r\n\r\n    const { componentProps, ...restProps } = props; // Извлекаем componentProps, чтобы он не попал в DOM\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : \"\"}`}>\r\n            <div>\r\n                <Component {...field} {...restProps} {...componentProps} />\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\n//................................................................\r\n\r\nexport const TextArea = ({ field, form: {touched, errors}, ...props}) => {\r\n\r\n    // debugger\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n            <div>\r\n                <textarea {...field} {...props}/>\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({ field, form: {touched, errors}, ...props}) => {\r\n\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n            <div>\r\n                <input {...field} {...props}/>\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// не работает \"field, form:\" undefined\r\n// import React from 'react';\r\n// import s from './FormsControls.module.css';\r\n//\r\n// // Один кусок кода\r\n// export const FormControls = ({field, form: {touched, errors}, children, ...props}) => {\r\n//     debugger\r\n//     const error = errors[field.name] && touched[field.name];\r\n//\r\n//     return (\r\n//         <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n//             <div>\r\n//                 {props.children}\r\n//             </div>\r\n//             {error && <span>{errors[field.name]}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// // 2 обертки над ним\r\n// export const TextArea = ({field, ...props}) => {\r\n//     return <FormControls {...props}> <textarea {...field} {...props}/></FormControls>\r\n// }\r\n// export const Input = ({field, ...props}) => {\r\n//     return <FormControls {...props}> <input {...field} {...props}/></FormControls>\r\n// }","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__gMU-B\",\"error\":\"FormsControls_error__boSMr\",\"formSummaryError\":\"FormsControls_formSummaryError__1YObT\"};"],"names":["LoginForm","props","_jsx","_Fragment","children","Formik","validationSchema","SignupSchema","initialValues","email","password","rememberMe","onSubmit","formData","_ref","setSubmitting","login","captcha","_ref2","handleSubmit","_jsxs","Form","Field","name","placeholder","component","FormControl","componentProps","type","captchaUrl","src","alt","errorAuth","className","s","formSummaryError","Yup","shape","min","max","required","connect","state","isAuth","auth","Navigate","replace","to","field","form","touched","errors","Component","restProps","error","formControl","TextArea"],"sourceRoot":""}