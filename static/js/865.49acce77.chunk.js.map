{"version":3,"file":"static/js/865.49acce77.chunk.js","mappings":"wJACA,MCAA,EAAmC,sCAAnC,EAAkF,4BAAlF,EAAqH,0BAArH,EAA2J,+BAA3J,EAAyM,kCAAzM,EAAuP,+BAAvP,EAAsS,mC,sBCC/R,MAAMA,EAA0BC,IAEnC,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAU,KACND,EAAUL,EAAMI,OAAO,GACxB,CAACJ,EAAMI,SAaV,OAAOG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACDR,IACES,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAMC,cAdOC,KACrBV,GAAY,EAAK,EAa6BO,SAAET,EAAMI,QAAU,UAG/DH,IACGS,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIG,SAbQC,IACpBT,EAAUS,EAAEC,cAAcC,MAAM,EAapBA,MAAOZ,EACPa,OAnBWC,KACvBhB,GAAY,GACZF,EAAMmB,aAAaf,EAAO,EAiBcgB,WAAS,QAGlD,E,aC9BA,MAAMC,EAAerB,IACxB,IAAKA,EAAMsB,QACP,OAAOZ,EAAAA,EAAAA,KAACa,EAAAA,EAAS,IASrB,OACIhB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACX,EAAsB,CAACK,OAAQJ,EAAMI,OAAQe,aAAcnB,EAAMmB,gBAClEZ,EAAAA,EAAAA,MAAA,OAAKiB,UAAWC,EAAmBhB,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKgB,IAAK1B,EAAMsB,QAAQK,OAAOC,OAASC,EAAWC,IAAI,SAASN,UAAWC,IAC1EzB,EAAM+B,UACHrB,EAAAA,EAAAA,KAAA,QAAMsB,OAAO,OAAOC,QAAQ,sBAAqBxB,UAC7CF,EAAAA,EAAAA,MAAA,OAAKiB,UAAWC,EAAehB,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,SAAOiB,UAAWC,EAAYhB,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOwB,KAAK,OAAOC,KAAK,SAASC,UAAQ,EAACC,OAAO,aACjD3B,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kFAEVC,EAAAA,EAAAA,KAAA,OAAKc,UAAWC,UAI5BlB,EAAAA,EAAAA,MAAA,OAAKiB,UAAWC,EAAOhB,SAAA,EACnBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAAa,IAAET,EAAMsB,QAAQgB,aACxC/B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,0CAAgB,IAAET,EAAMsB,QAAQiB,8BAC3ChC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2CAAiB,IAAET,EAAMsB,QAAQkB,WAAY,KACxDjC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAAgB,IAAET,EAAMsB,QAAQmB,UAC1CzC,EAAMsB,QAAQoB,SAASC,YACpBpC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBACRC,EAAAA,EAAAA,KAAA,KAAGkC,KAAM,yBAAyB5C,EAAMsB,QAAQoB,SAASC,YACtDE,OAAO,SACPC,IAAI,sBACJtB,UAAWC,EAAYhB,SACrB,KAAKT,EAAMsB,QAAQoB,SAASC,yBAM/C,E,aClDd,QAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mBCEVI,EAAQ/C,IAGbO,EAAAA,EAAAA,MAAA,OAAKiB,UAAWC,EAAOhB,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OACIgB,IAAK,8FACR1B,EAAMgD,SACPtC,EAAAA,EAAAA,KAAA,OAAAD,UACIF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,QAAMT,EAAMiD,qB,+BCJ3B,MAAMC,EAAUC,EAAAA,MAAWnD,IAM9B,IAAIoD,EAAgB,IAAIpD,EAAMqD,OAAOC,KAAI,CAACC,EAAGC,KACzC9C,EAAAA,EAAAA,KAACqC,EAAI,CAASE,aAAcM,EAAEN,aAAcD,QAASO,EAAEP,SAA5CQ,KAGf,OACIjD,EAAAA,EAAAA,MAAA,OAAKiB,UAAWC,EAAahB,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAERC,EAAAA,EAAAA,KAAC+C,EAAU,CAACC,QAAS1D,EAAM0D,QAASC,YAAa3D,EAAM2D,eACvDjD,EAAAA,EAAAA,KAAA,OAAKc,UAAWC,EAAQhB,SACnB2C,MAEH,IAIRQ,EAAeC,EAAAA,KAAaC,MAAM,CACpCH,YAAaE,EAAAA,KACRE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGZR,EAAczD,IAQZU,EAAAA,EAAAA,KAACwD,EAAAA,GAAM,CACHC,cAAe,CAACR,YAAa,IAC7BS,iBAAkBR,EAClBS,SATUC,CAACC,EAAMC,KAAmB,IAAjB,UAACC,GAAUD,EAClCxE,EAAM0D,QAAQa,EAAOZ,aACrBc,GAAW,EAOahE,SAEnBiE,IAAA,IAAC,aAACC,EAAY,OAAEJ,EAAM,OAAEK,EAAM,QAAEC,GAAQH,EAAA,OACrCnE,EAAAA,EAAAA,MAACuE,EAAAA,GAAI,CAAArE,SAAA,EACDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACqE,EAAAA,GAAK,CACF5C,KAAK,cACL6C,UAAWC,EAAAA,GACXjE,MAAOuD,EAAOZ,YACd9C,SAAU8D,OAGlBjE,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQwB,KAAK,SAAQzB,SAAC,iBAEvB,I,WC3ChB,MAAMyE,GACTC,EAAAA,EAAAA,KAhBmBC,IACZ,CACH/B,MAAO+B,EAAMC,YAAYhC,MACzBM,YAAayB,EAAMC,YAAY1B,gBAIb2B,IACf,CACH5B,QAAUC,IACN2B,GAASC,EAAAA,EAAAA,IAAe5B,GAAa,KAM7CwB,CAA6CjC,GChBpCsC,EAAWxF,IAEhBO,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACW,EAAW,CAACoE,UAAWzF,EAAMyF,UAAW1D,QAAS/B,EAAM+B,QAAST,QAAStB,EAAMsB,QAASlB,OAAQJ,EAAMI,OAAQe,aAAcnB,EAAMmB,gBACnIT,EAAAA,EAAAA,KAACwE,EAAgB,O,+BCD7B,MAAMQ,UAAyBvC,EAAAA,UAE3BwC,cAAAA,GACIC,KAAK5F,MAAM6F,WAAWD,KAAK5F,MAAM8F,QACjCF,KAAK5F,MAAM+F,UAAUH,KAAK5F,MAAM8F,OACpC,CAEAE,iBAAAA,GACIJ,KAAKD,gBACT,CAEAM,kBAAAA,CAAmBC,EAAWC,EAAWC,GACjCR,KAAK5F,MAAM8F,SAAWI,EAAUJ,QAChCF,KAAKD,gBAEb,CAEAU,MAAAA,GAEI,OAAKT,KAAK5F,MAAMsG,QAGZ5F,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC8E,EAAO,CACJC,UAAWG,KAAK5F,MAAMyF,UACtB1D,SAAU6D,KAAK5F,MAAM8F,UACjBF,KAAK5F,MACTsB,QAASsE,KAAK5F,MAAMsB,QACpBlB,OAAQwF,KAAK5F,MAAMI,OACnBe,aAAcyE,KAAK5F,MAAMmB,kBAVNT,EAAAA,EAAAA,KAAC6F,EAAAA,GAAQ,CAACC,GAAG,UAahD,EAGJ,SAASC,EAA0BzG,GAC/B,MAAM,OAAE8F,IAAWY,EAAAA,EAAAA,KACnB,OAAOhG,EAAAA,EAAAA,KAACgF,EAAgB,IAAK1F,EAAO8F,OAAQA,GAChD,CAeA,SAAea,EAAAA,EAAAA,KACXxB,EAAAA,EAAAA,KAVmBC,IACX,CACJ9D,QAAS8D,EAAMC,YAAY/D,QAC3BlB,OAAQgF,EAAMC,YAAYjF,OAC1BwG,WAAYxB,EAAMyB,KAAKf,UAMF,CAACgB,eAAc,IAAEjB,WAAU,KAAEE,UAAS,KAAE5E,aAAY,KAAEsE,UAAS,OACxFsB,EAAAA,EAFJ,EAbA,SAAiC/G,GAC7B,OAAOU,EAAAA,EAAAA,KAAC+F,EAAyB,IAAKzG,GAC1C,G,uEC/CO,MAAMgH,EAAcxC,IAAqF,IAApF,MAAEyC,EAAOC,MAAM,QAAErC,EAAO,OAAED,GAAUI,UAAWmC,EAAY,WAAYnH,GAAOwE,EAEtG,MAAM,eAAE4C,KAAmBC,GAAcrH,EACnCsH,EAAQ1C,EAAOqC,EAAM9E,OAAS0C,EAAQoC,EAAM9E,MAElD,OACI5B,EAAAA,EAAAA,MAAA,OAAKiB,UAAW,GAAGC,EAAAA,EAAE8F,eAAeD,EAAQ7F,EAAAA,EAAE6F,MAAQ,KAAK7G,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACyG,EAAS,IAAKF,KAAWI,KAAeD,MAE5CE,IAAS5G,EAAAA,EAAAA,KAAA,QAAAD,SAAOmE,EAAOqC,EAAM9E,UAC5B,EAMD8C,EAAWP,IAAkD,IAAjD,MAAEuC,EAAOC,MAAM,QAACrC,EAAO,OAAED,MAAY5E,GAAM0E,EAGhE,MAAM4C,EAAQ1C,EAAOqC,EAAM9E,OAAS0C,EAAQoC,EAAM9E,MAElD,OACI5B,EAAAA,EAAAA,MAAA,OAAKiB,UAAW,GAAGC,EAAAA,EAAE8F,eAAeD,EAAQ7F,EAAAA,EAAE6F,MAAQ,KAAK7G,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,eAAcuG,KAAWjH,MAE5BsH,IAAS5G,EAAAA,EAAAA,KAAA,QAAAD,SAAOmE,EAAOqC,EAAM9E,UAC5B,C,sEC3Bd,IAAIqF,EAAmBpC,IAAK,CACxBkB,OAAQlB,EAAMyB,KAAKP,SAGhB,MAAMS,EAAoBI,IAE7B,MAAMM,UAA0BtE,EAAAA,UAC5BkD,MAAAA,GACI,OAAIT,KAAK5F,MAAMsG,QAIR5F,EAAAA,EAAAA,KAACyG,EAAS,IAAKvB,KAAK5F,SAHhBU,EAAAA,EAAAA,KAAC6F,EAAAA,GAAQ,CAACC,GAAG,UAI5B,EAKJ,OAFuCrB,EAAAA,EAAAA,IAAQqC,EAARrC,CAAyBsC,EAEzB,C,iCCrB3C,SAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","webpack://react-kabzda-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__Q44dJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__PfVFs\",\"avatar\":\"ProfileInfo_avatar__Y6NqF\",\"info\":\"ProfileInfo_info__s8mie\",\"instagram\":\"ProfileInfo_instagram__Q-e-J\",\"inputFileRow\":\"ProfileInfo_inputFileRow__-zD2I\",\"inputFile\":\"ProfileInfo_inputFile__XrMWb\",\"inputFileList\":\"ProfileInfo_inputFileList__KW6U-\",\"inputFileListItem\":\"ProfileInfo_inputFileListItem__Dh+8t\",\"inputFileListName\":\"ProfileInfo_inputFileListName__4IWtD\",\"inputFileListRemove\":\"ProfileInfo_inputFileListRemove__m8XEm\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.upDateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n        }\r\n        {editMode && (\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                    onBlur={deactivateEditMode} autoFocus/>\r\n            </div>\r\n        )}\r\n    </>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\n\r\nexport const ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileStatusWithHooks status={props.status} upDateStatus={props.upDateStatus}/>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} alt=\"Avatar\" className={s.avatar}/>\r\n                {props.isOwner &&\r\n                    <form method=\"post\" encType=\"multipart/form-data\">\r\n                        <div className={s.inputFileRow}>\r\n                            <label className={s.inputFile}>\r\n                                <input type=\"file\" name=\"file[]\" multiple accept=\"image/*\"/>\r\n                                <span>Выберите файл</span>\r\n                            </label>\r\n                            <div className={s.inputFileList}></div>\r\n                        </div>\r\n                    </form>\r\n                }\r\n                <div className={s.info}>\r\n                    <p><strong>Имя:</strong> {props.profile.fullName}</p>\r\n                    <p><strong>Работа:</strong> {props.profile.lookingForAJobDescription}</p>\r\n                    <p><strong>Обо мне:</strong> {props.profile.aboutMe}</p>d\r\n                    <p><strong>userID:</strong> {props.profile.userId}</p>\r\n                    {props.profile.contacts.instagram && (\r\n                        <p>\r\n                            <strong>Instagram:</strong>\r\n                            <a href={`https://instagram.com/${props.profile.contacts.instagram}`}\r\n                               target=\"_blank\"\r\n                               rel=\"noopener noreferrer\"\r\n                               className={s.instagram}>\r\n                                {` @${props.profile.contacts.instagram}`}\r\n                            </a>\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__bwru2\",\"posts\":\"MyPosts_posts__aiUzd\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KRdsC\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nexport const Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={\"https://img.freepik.com/premium-photo/flat-icon-design_1258715-207027.jpg?semt=ais_hybrid\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.quantityLike}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from './Post/Post';\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport * as Yup from 'yup';\r\n\r\nexport const MyPosts = React.memo(props => {\r\n    // Если вдруг приспичит в классовую компоненту\r\n    // shouldComponentUpdate(nextProps) {\r\n    //     return nextProps.posts !== this.props.posts || nextProps.addPost !== this.props.addPost;\r\n    // }\r\n\r\n    let postsElements = [...props.posts].map((p, i) => (\r\n        <Post key={i} quantityLike={p.quantityLike} message={p.message}/>\r\n    ));\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <MyPostForm addPost={props.addPost} newPostText={props.newPostText}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    newPostText: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n});\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    const onAddPost = (values, {resetForm}) => {\r\n        props.addPost(values.newPostText);\r\n        resetForm();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{newPostText: \"\"}}\r\n            validationSchema={SignupSchema}\r\n            onSubmit={onAddPost}\r\n        >\r\n            {({handleChange, values, errors, touched}) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field\r\n                            name=\"newPostText\"\r\n                            component={TextArea}\r\n                            value={values.newPostText}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Add post</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profile-reduser\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer =\r\n    connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport const Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} upDateStatus={props.upDateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, setUserProfile, upDateStatus} from \"../../redux/profile-reduser\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        this.props.getProfile(this.props.userID)\r\n        this.props.getStatus(this.props.userID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.userID !== prevProps.userID) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    savePhoto={this.props.savePhoto}\r\n                    isOwner={!this.props.userID}\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    upDateStatus={this.props.upDateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ProfileContainerUseParams(props) {\r\n    const { userID } = useParams();\r\n    return <ProfileContainer {...props} userID={userID} />;\r\n}\r\n\r\nfunction ProfileContainerWrapper(props) {\r\n    return <ProfileContainerUseParams {...props} />;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserID: state.auth.userID,\r\n    })\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, upDateStatus, savePhoto}),\r\n    withAuthRedirect\r\n)(ProfileContainerWrapper)","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({ field, form: { touched, errors }, component: Component = \"input\", ...props }) => {\r\n\r\n    const { componentProps, ...restProps } = props; // Извлекаем componentProps, чтобы он не попал в DOM\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : \"\"}`}>\r\n            <div>\r\n                <Component {...field} {...restProps} {...componentProps} />\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\n//................................................................\r\n\r\nexport const TextArea = ({ field, form: {touched, errors}, ...props}) => {\r\n\r\n    // debugger\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n            <div>\r\n                <textarea {...field} {...props}/>\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({ field, form: {touched, errors}, ...props}) => {\r\n\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n            <div>\r\n                <input {...field} {...props}/>\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// не работает \"field, form:\" undefined\r\n// import React from 'react';\r\n// import s from './FormsControls.module.css';\r\n//\r\n// // Один кусок кода\r\n// export const FormControls = ({field, form: {touched, errors}, children, ...props}) => {\r\n//     debugger\r\n//     const error = errors[field.name] && touched[field.name];\r\n//\r\n//     return (\r\n//         <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n//             <div>\r\n//                 {props.children}\r\n//             </div>\r\n//             {error && <span>{errors[field.name]}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// // 2 обертки над ним\r\n// export const TextArea = ({field, ...props}) => {\r\n//     return <FormControls {...props}> <textarea {...field} {...props}/></FormControls>\r\n// }\r\n// export const Input = ({field, ...props}) => {\r\n//     return <FormControls {...props}> <input {...field} {...props}/></FormControls>\r\n// }","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectedComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectedComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__gMU-B\",\"error\":\"FormsControls_error__boSMr\",\"formSummaryError\":\"FormsControls_formSummaryError__1YObT\"};"],"names":["ProfileStatusWithHooks","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","_Fragment","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","onBlur","deactivateEditMode","upDateStatus","autoFocus","ProfileInfo","profile","Preloader","className","s","src","photos","large","userPhoto","alt","isOwner","method","encType","type","name","multiple","accept","fullName","lookingForAJobDescription","aboutMe","userId","contacts","instagram","href","target","rel","Post","message","quantityLike","MyPosts","React","postsElements","posts","map","p","i","MyPostForm","addPost","newPostText","SignupSchema","Yup","shape","min","max","required","Formik","initialValues","validationSchema","onSubmit","onAddPost","values","_ref","resetForm","_ref2","handleChange","errors","touched","Form","Field","component","TextArea","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","savePhoto","ProfileContainer","refreshProfile","this","getProfile","userID","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","isAuth","Navigate","to","ProfileContainerUseParams","useParams","compose","authUserID","auth","setUserProfile","withAuthRedirect","FormControl","field","form","Component","componentProps","restProps","error","formControl","mapStateToProps","RedirectComponent"],"sourceRoot":""}