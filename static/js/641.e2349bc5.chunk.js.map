{"version":3,"file":"static/js/641.e2349bc5.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","webpack://react-kabzda-1/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__Q44dJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__PfVFs\",\"avatar\":\"ProfileInfo_avatar__Y6NqF\",\"info\":\"ProfileInfo_info__s8mie\",\"instagram\":\"ProfileInfo_instagram__Q-e-J\",\"contact\":\"ProfileInfo_contact__b3LQP\",\"inputFileRow\":\"ProfileInfo_inputFileRow__-zD2I\",\"inputFile\":\"ProfileInfo_inputFile__XrMWb\",\"inputFileList\":\"ProfileInfo_inputFileList__KW6U-\",\"inputFileListItem\":\"ProfileInfo_inputFileListItem__Dh+8t\",\"inputFileListName\":\"ProfileInfo_inputFileListName__4IWtD\",\"inputFileListRemove\":\"ProfileInfo_inputFileListRemove__m8XEm\",\"form\":\"ProfileInfo_form__WlwmF\",\"label\":\"ProfileInfo_label__fbB9w\",\"input\":\"ProfileInfo_input__vcIJ3\",\"checkbox\":\"ProfileInfo_checkbox__qpkHr\",\"contactsBlock\":\"ProfileInfo_contactsBlock__nRzrO\",\"contactsTitle\":\"ProfileInfo_contactsTitle__rXQwK\",\"contactItem\":\"ProfileInfo_contactItem__C2sER\",\"button\":\"ProfileInfo_button__5zd40\",\"inputError\":\"ProfileInfo_inputError__VNI2w\",\"errorText\":\"ProfileInfo_errorText__b--Jp\",\"buttonEdite\":\"ProfileInfo_buttonEdite__jd85H\",\"formControl\":\"ProfileInfo_formControl__eXZbe\",\"error\":\"ProfileInfo_error__gM5fA\",\"formSummaryError\":\"ProfileInfo_formSummaryError__+-K3L\"};","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nexport const ProfileDataForm = ({ profile, onSubmit, error }) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors  }, // Получаем ошибки валидации\r\n    } = useForm({\r\n        defaultValues: profile, // Загружаем данные профиля\r\n        mode: \"onBlur\", // Проверка при потере фокуса\r\n        criteriaMode: \"all\",\r\n    });\r\n\r\n    // Обновляем форму при изменении profile\r\n    useEffect(() => {\r\n        reset(profile);\r\n    }, [profile, reset]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit((formData, event) => onSubmit(formData, event, errors))} className={s.form}>\r\n            <div className={s.info}>\r\n                <label className={s.label}>\r\n                    <strong>Name:</strong>\r\n                    <input\r\n                        className={`${s.input} ${errors.fullName ? s.inputError : \"\"}`}\r\n                        {...register(\"fullName\", { required: \"Name is required\" })}\r\n                    />\r\n                    {errors.fullName && <p className={s.errorText}>{errors.fullName.message}</p>}\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    <strong>Looking for a job:</strong>\r\n                    <input\r\n                        className={s.checkbox}\r\n                        type=\"checkbox\"\r\n                        {...register(\"lookingForAJob\")}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    <strong>My professional skills:</strong>\r\n                    <input\r\n                        className={`${s.input} ${errors.lookingForAJobDescription ? s.inputError : \"\"}`}\r\n                        {...register(\"lookingForAJobDescription\", { required: \"This field is required\" })}\r\n                    />\r\n                    {errors.lookingForAJobDescription && (\r\n                        <p className={s.errorText}>{errors.lookingForAJobDescription.message}</p>\r\n                    )}\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    <strong>About me:</strong>\r\n                    <input\r\n                        className={`${s.input} ${errors.aboutMe ? s.inputError : \"\"}`}\r\n                        {...register(\"aboutMe\", { required: \"About me is required\" })}\r\n                    />\r\n                    {errors.aboutMe && <p className={s.errorText}>{errors.aboutMe.message}</p>}\r\n                </label>\r\n\r\n                {/* Блок с контактами */}\r\n                <div className={s.contactsBlock}>\r\n                    <b className={s.contactsTitle}>Contacts:</b>\r\n                    {profile.contacts &&\r\n                        Object.keys(profile.contacts).map((key) => (\r\n                            <div key={key} className={s.contactItem}>\r\n                                <strong>{key}:</strong>\r\n                                <input\r\n                                    className={`${s.input} ${errors.contacts?.[key] ? s.inputError : \"\"}`}\r\n                                    {...register(`contacts.${key}`, {\r\n                                        pattern: {\r\n                                            value: /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.\\w{2,}([\\/?#][\\w-.~:/?#[\\]@!$&'()*+,;=]*)?$/,\r\n                                            message: \"Enter a valid URL\",\r\n                                        },\r\n                                    })}\r\n                                />\r\n                                {errors.contacts?.[key] && (\r\n                                    <p className={s.errorText}>{errors.contacts[key].message}</p>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n\r\n                {error && <div className={s.formSummaryError}>{error}</div>}\r\n\r\n                <button type=\"submit\" className={s.button}>Save</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {Contact} from \"./ProfileInfo\";\r\n\r\nexport const ProfileData = (props) => {\r\n    // console.log(props.profile)\r\n    return (\r\n        <div>\r\n            {props.isOwner &&\r\n                <div>\r\n                    <button className={s.buttonEdite} onClick={props.goToEditeMode}>Edite</button>\r\n                </div>\r\n            }\r\n            <div className={s.info}>\r\n                <p><strong>Name:</strong> {props.profile.fullName}</p>\r\n                <p><strong>Looking for a job:</strong> {props.profile.lookingForAJob ? \"yes\" : \"no\"}</p>\r\n                {props.profile.lookingForAJob &&\r\n                    <p><strong>My professional skills:</strong> {props.profile.lookingForAJobDescription}</p>\r\n                }\r\n                <p><strong>About me:</strong> {props.profile.aboutMe}</p>\r\n                <p><strong>userID:</strong> {props.profile.userId}</p>\r\n\r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => <Contact key={key}\r\n                                                                                              contactTitle={key}\r\n                                                                                              contactValue={props.profile.contacts[key]}/>)}\r\n                </div>\r\n\r\n                {/*{props.profile.contacts.instagram && (*/}\r\n                {/*    <p>*/}\r\n                {/*        <strong>Instagram:</strong>*/}\r\n                {/*        <a href={`https://instagram.com/${props.profile.contacts.instagram}`}*/}\r\n                {/*           target=\"_blank\"*/}\r\n                {/*           rel=\"noopener noreferrer\"*/}\r\n                {/*           className={s.instagram}>*/}\r\n                {/*            {` @${props.profile.contacts.instagram}`}*/}\r\n                {/*        </a>*/}\r\n                {/*    </p>*/}\r\n                {/*)}*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.upDateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        {!editMode &&\r\n            <div>\r\n                <span onClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n        }\r\n        {editMode && (\r\n            <div>\r\n                <textarea\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                    onBlur={deactivateEditMode} autoFocus/>\r\n            </div>\r\n        )}\r\n    </>\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\nimport {ProfileData} from \"./ProfileData\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\nexport const ProfileInfo = ({error, profile, isOwner, savePhoto, saveProfile, status, upDateStatus}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!error) {\r\n            setEditMode(false);\r\n        }\r\n    }, [error]);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>;\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length > 0) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).catch((err) => {\r\n            console.error(\"Ошибка при сохранении профиля:\", err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img\r\n                    src={profile.photos.large || userPhoto}\r\n                    alt=\"Avatar\"\r\n                    className={s.avatar}\r\n                />\r\n                <span>Status:</span>\r\n\r\n                {status\r\n                    ? <ProfileStatusWithHooks status={status} upDateStatus={upDateStatus}/>\r\n                    : <span>---</span>}\r\n                {isOwner && (\r\n                    <form method=\"post\" encType=\"multipart/form-data\">\r\n                        <div className={s.inputFileRow}>\r\n                            <label className={s.inputFile}>\r\n                                <input\r\n                                    onChange={mainPhotoSelected}\r\n                                    type=\"file\"\r\n                                    name=\"file[]\"\r\n                                    multiple\r\n                                    accept=\"image/*\"\r\n                                />\r\n                                <span>Выберите файл</span>\r\n                            </label>\r\n                            <div className={s.inputFileList}></div>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n                {editMode ? (\r\n                    <ProfileDataForm error={error} profile={profile} onSubmit={onSubmit}/>\r\n                ) : (\r\n                    <ProfileData\r\n                        goToEditeMode={() => setEditMode(true)}\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => (\r\n    <div className={s.contact}>\r\n        <b>{contactTitle}</b>: {contactValue || \"—\"}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__bwru2\",\"posts\":\"MyPosts_posts__aiUzd\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__KRdsC\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nexport const Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={\"https://img.freepik.com/premium-photo/flat-icon-design_1258715-207027.jpg?semt=ais_hybrid\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.quantityLike}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from './Post/Post';\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport * as Yup from 'yup';\r\n\r\nexport const MyPosts = React.memo(props => {\r\n    // Если вдруг приспичит в классовую компоненту\r\n    // shouldComponentUpdate(nextProps) {\r\n    //     return nextProps.posts !== this.props.posts || nextProps.addPost !== this.props.addPost;\r\n    // }\r\n\r\n    let postsElements = [...props.posts].map((p, i) => (\r\n        <Post key={i} quantityLike={p.quantityLike} message={p.message}/>\r\n    ));\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <MyPostForm addPost={props.addPost} newPostText={props.newPostText}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    newPostText: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n});\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    const onAddPost = (values, {resetForm}) => {\r\n        props.addPost(values.newPostText);\r\n        resetForm();\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{newPostText: \"\"}}\r\n            validationSchema={SignupSchema}\r\n            onSubmit={onAddPost}\r\n        >\r\n            {({handleChange, values, errors, touched}) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field\r\n                            name=\"newPostText\"\r\n                            component={TextArea}\r\n                            value={values.newPostText}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Add post</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profile-reduser\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer =\r\n    connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport const Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                error={props.error}\r\n                saveProfile={props.saveProfile}\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                upDateStatus={props.upDateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, setUserProfile, upDateStatus, saveProfile} from \"../../redux/profile-reduser\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        this.props.getProfile(this.props.userID)\r\n        this.props.getStatus(this.props.userID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.userID !== prevProps.userID) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    savePhoto={this.props.savePhoto}\r\n                    isOwner={!this.props.userID}\r\n                    {...this.props}\r\n                    error={this.props.error}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    upDateStatus={this.props.upDateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ProfileContainerUseParams(props) {\r\n    const { userID } = useParams();\r\n    return <ProfileContainer {...props} userID={userID} />;\r\n}\r\n\r\nfunction ProfileContainerWrapper(props) {\r\n    return <ProfileContainerUseParams {...props} />;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserID: state.auth.userID,\r\n        error: state.profilePage.error,\r\n    })\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, upDateStatus, savePhoto, saveProfile}),\r\n    withAuthRedirect\r\n)(ProfileContainerWrapper)\r\n","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\n\r\nexport const FormControl = ({ field, form: { touched, errors }, component: Component = \"input\", ...props }) => {\r\n\r\n    const { componentProps, ...restProps } = props; // Извлекаем componentProps, чтобы он не попал в DOM\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : \"\"}`}>\r\n            <div>\r\n                <Component {...field} {...restProps} {...componentProps} />\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\n//................................................................\r\n\r\nexport const TextArea = ({ field, form: {touched, errors}, ...props}) => {\r\n\r\n    // debugger\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n            <div>\r\n                <textarea {...field} {...props}/>\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({ field, form: {touched, errors}, ...props}) => {\r\n\r\n    const error = errors[field.name] && touched[field.name];\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n            <div>\r\n                <input {...field} {...props}/>\r\n            </div>\r\n            {error && <span>{errors[field.name]}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// не работает \"field, form:\" undefined\r\n// import React from 'react';\r\n// import s from './FormsControls.module.css';\r\n//\r\n// // Один кусок кода\r\n// export const FormControls = ({field, form: {touched, errors}, children, ...props}) => {\r\n//     debugger\r\n//     const error = errors[field.name] && touched[field.name];\r\n//\r\n//     return (\r\n//         <div className={`${s.formControl} ${error ? s.error : ''}`}>\r\n//             <div>\r\n//                 {props.children}\r\n//             </div>\r\n//             {error && <span>{errors[field.name]}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// // 2 обертки над ним\r\n// export const TextArea = ({field, ...props}) => {\r\n//     return <FormControls {...props}> <textarea {...field} {...props}/></FormControls>\r\n// }\r\n// export const Input = ({field, ...props}) => {\r\n//     return <FormControls {...props}> <input {...field} {...props}/></FormControls>\r\n// }","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectedComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectedComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__gMU-B\",\"error\":\"FormsControls_error__boSMr\",\"formSummaryError\":\"FormsControls_formSummaryError__1YObT\"};"],"names":["ProfileDataForm","_ref","profile","onSubmit","error","register","handleSubmit","reset","formState","errors","useForm","defaultValues","mode","criteriaMode","useEffect","_jsx","formData","event","className","s","children","_jsxs","fullName","required","message","type","lookingForAJobDescription","aboutMe","contacts","Object","keys","map","key","_errors$contacts","_errors$contacts2","pattern","value","ProfileData","props","isOwner","onClick","goToEditeMode","lookingForAJob","userId","Contact","contactTitle","contactValue","ProfileStatusWithHooks","editMode","setEditMode","useState","status","setStatus","_Fragment","activateEditMode","onChange","e","currentTarget","onBlur","deactivateEditMode","upDateStatus","autoFocus","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","alt","method","encType","target","files","length","name","multiple","accept","catch","err","console","_ref2","Post","quantityLike","MyPosts","React","postsElements","posts","p","i","MyPostForm","addPost","newPostText","SignupSchema","Yup","shape","min","max","Formik","initialValues","validationSchema","onAddPost","values","resetForm","handleChange","touched","Form","Field","component","TextArea","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","refreshProfile","this","getProfile","userID","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","isAuth","Navigate","to","ProfileContainerUseParams","useParams","compose","authUserID","auth","setUserProfile","withAuthRedirect","FormControl","field","form","Component","componentProps","restProps","formControl","mapStateToProps","RedirectComponent"],"sourceRoot":""}